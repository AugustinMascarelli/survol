#!/usr/bin/python

import lib_common

import psutil
import socket
import rdflib
from lib_common import pc

grph = rdflib.Graph()

#
# The modules.dep as generated by module-init-tools depmod,
# lists the dependencies for every module in the directories
# under /lib/modules/version, where modules.dep is. 
#
# cat /proc/version
# Linux version 2.6.24.7-desktop586-2mnb (qateam@titan.mandriva.com) (gcc version 4.2.3 (4.2.3-6mnb1)) #1 SMP Thu Oct 30 17:39:28 EDT 2008
# ls /lib/modules/$(cat /proc/version | cut -d " " -f3)/modules.dep
#
# /lib/modules/2.6.24.7-desktop586-2mnb/modules.dep
# /lib/modules/2.6.24.7-desktop586-2mnb/dkms-binary/drivers/char/hsfmc97via.ko.gz: /lib/modules/2.6.24.7-desktop586-2mnb/dkms-binary/drivers/char/hsfserial.ko.gz /lib/modules/2.6.24.7-desktop586-2mnb/dkms-binary/drivers/char/hsfengine.ko.gz /lib/modules/2.6.24.7-desktop586-2mnb/dkms-binary/drivers/char/hsfosspec.ko.gz /lib/modules/2.6.24.7-desktop586-2mnb/kernel/drivers/usb/core/usbcore.ko.gz /lib/modules/2.6.24.7-desktop586-2mnb/dkms-binary/drivers/char/hsfsoar.ko.gz
#
#

# This can work on Linux only.
version_file = open("/proc/version","r")
version_line = version_file.read()
version = version_line.split(' ')[2]

module_deps_name = "/lib/modules/" + version + "/modules.dep"
modules_file = open(module_deps_name,"r")
for modules_line in modules_file:
	modules_split_colon = modules_line.split(':')
	module_name = modules_split_colon[0]
	module_deps_list = modules_split_colon[1].split(' ')

	for module_dep in module_deps_list:
		if module_dep == "":
			continue

		# print ( module_name + " => " + module_dep )

		# This generates a directed acyclic graph,
		# but not a tree in the general case.
		file_parent = lib_common.FileUri(module_name)
		file_child = lib_common.FileUri(module_dep)

		grph.add( ( file_parent, pc.property_module_dep, file_child ) )

lib_common.OutCgiRdf(grph)

